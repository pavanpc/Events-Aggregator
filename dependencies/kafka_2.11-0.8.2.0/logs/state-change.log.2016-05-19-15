[2016-05-19 15:05:59,594] TRACE Controller 0 epoch 1 changed partition [twitter-topic,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2016-05-19 15:05:59,595] TRACE Controller 0 epoch 1 changed partition [Hello-Kafka,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2016-05-19 15:05:59,596] TRACE Controller 0 epoch 1 started leader election for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:05:59,602] ERROR Controller 0 epoch 1 initiated state change for partition [twitter-topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-05-19 15:05:59,602] TRACE Controller 0 epoch 1 started leader election for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:05:59,606] ERROR Controller 0 epoch 1 initiated state change for partition [Hello-Kafka,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [Hello-Kafka,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-05-19 15:05:59,624] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [twitter-topic,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2016-05-19 15:05:59,629] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [Hello-Kafka,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2016-05-19 15:16:17,904] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-05-19 15:16:26,982] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-05-19 15:16:35,971] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-05-19 15:16:57,578] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-05-19 15:17:07,642] TRACE Controller 0 epoch 2 started leader election for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,651] ERROR Controller 0 epoch 2 initiated state change for partition [twitter-topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-05-19 15:17:07,653] TRACE Controller 0 epoch 2 started leader election for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,658] ERROR Controller 0 epoch 2 initiated state change for partition [Hello-Kafka,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [Hello-Kafka,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-05-19 15:17:07,708] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 3 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,708] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 3 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,721] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [twitter-topic,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-05-19 15:17:07,721] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [Hello-Kafka,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-05-19 15:17:07,724] TRACE Controller 0 epoch 2 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 4 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,724] TRACE Controller 0 epoch 2 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 4 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,725] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 4 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,725] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 4 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,725] TRACE Controller 0 epoch 2 started leader election for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,736] TRACE Controller 0 epoch 2 elected leader 0 for Offline partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,737] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition [twitter-topic,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 3 (state.change.logger)
[2016-05-19 15:17:07,737] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition [Hello-Kafka,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 3 (state.change.logger)
[2016-05-19 15:17:07,738] TRACE Controller 0 epoch 2 changed partition [twitter-topic,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2016-05-19 15:17:07,738] TRACE Controller 0 epoch 2 started leader election for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,746] TRACE Controller 0 epoch 2 elected leader 0 for Offline partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,747] TRACE Controller 0 epoch 2 changed partition [Hello-Kafka,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2016-05-19 15:17:07,747] TRACE Controller 0 epoch 2 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) with correlationId 5 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,747] TRACE Controller 0 epoch 2 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) with correlationId 5 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,748] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) with correlationId 5 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,748] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) with correlationId 5 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,748] TRACE Controller 0 epoch 2 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:07,775] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 2 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,776] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 2 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,781] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 2 starting the become-follower transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,781] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 2 starting the become-follower transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,783] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 1 for partition [Hello-Kafka,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2016-05-19 15:17:07,786] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 1 for partition [twitter-topic,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2016-05-19 15:17:07,795] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 2 for the become-follower transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,795] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 2 for the become-follower transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,798] TRACE Controller 0 epoch 2 received response LeaderAndIsrResponse(4,Map((twitter-topic,0) -> 0, (Hello-Kafka,0) -> 0),0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:07,799] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition [twitter-topic,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 4 (state.change.logger)
[2016-05-19 15:17:07,799] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition [Hello-Kafka,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 4 (state.change.logger)
[2016-05-19 15:17:07,800] TRACE Controller 0 epoch 2 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:07,800] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 2 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,800] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 2 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,801] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 2 starting the become-leader transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,801] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 2 starting the become-leader transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,803] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 2 with correlation id 5 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,803] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 2 with correlation id 5 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,810] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 2 for the become-leader transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:07,810] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 2 for the become-leader transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:07,810] TRACE Controller 0 epoch 2 received response LeaderAndIsrResponse(5,Map((twitter-topic,0) -> 0, (Hello-Kafka,0) -> 0),0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:07,811] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [twitter-topic,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 5 (state.change.logger)
[2016-05-19 15:17:07,811] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [Hello-Kafka,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 5 (state.change.logger)
[2016-05-19 15:17:07,811] TRACE Controller 0 epoch 2 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:17,807] TRACE Controller 0 epoch 2 changed partition [twitter-topic,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2016-05-19 15:17:17,807] TRACE Controller 0 epoch 2 changed partition [Hello-Kafka,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2016-05-19 15:17:17,807] TRACE Controller 0 epoch 2 started leader election for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:17,811] ERROR Controller 0 epoch 2 initiated state change for partition [twitter-topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-05-19 15:17:17,812] TRACE Controller 0 epoch 2 started leader election for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:17,815] ERROR Controller 0 epoch 2 initiated state change for partition [Hello-Kafka,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [Hello-Kafka,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-05-19 15:17:17,822] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [twitter-topic,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2016-05-19 15:17:17,837] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [Hello-Kafka,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2016-05-19 15:17:21,178] TRACE Controller 0 epoch 3 started leader election for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,185] ERROR Controller 0 epoch 3 initiated state change for partition [twitter-topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitter-topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-05-19 15:17:21,187] TRACE Controller 0 epoch 3 started leader election for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,192] ERROR Controller 0 epoch 3 initiated state change for partition [Hello-Kafka,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [Hello-Kafka,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-05-19 15:17:21,231] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 3 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,231] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 3 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,241] TRACE Controller 0 epoch 3 changed state of replica 0 for partition [twitter-topic,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-05-19 15:17:21,241] TRACE Controller 0 epoch 3 changed state of replica 0 for partition [Hello-Kafka,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-05-19 15:17:21,244] TRACE Controller 0 epoch 3 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,244] TRACE Controller 0 epoch 3 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,245] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,245] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,245] TRACE Controller 0 epoch 3 started leader election for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,252] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [twitter-topic,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 3 (state.change.logger)
[2016-05-19 15:17:21,253] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [Hello-Kafka,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 3 (state.change.logger)
[2016-05-19 15:17:21,254] TRACE Controller 0 epoch 3 elected leader 0 for Offline partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,257] TRACE Controller 0 epoch 3 changed partition [twitter-topic,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2016-05-19 15:17:21,257] TRACE Controller 0 epoch 3 started leader election for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,263] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:21,263] TRACE Controller 0 epoch 3 elected leader 0 for Offline partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,264] TRACE Controller 0 epoch 3 changed partition [Hello-Kafka,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2016-05-19 15:17:21,264] TRACE Controller 0 epoch 3 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,264] TRACE Controller 0 epoch 3 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,265] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,265] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,287] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 3 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,287] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 3 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,291] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 3 starting the become-follower transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,292] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 3 starting the become-follower transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,293] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 2 for partition [Hello-Kafka,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2016-05-19 15:17:21,297] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 2 for partition [twitter-topic,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2016-05-19 15:17:21,306] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 3 for the become-follower transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,306] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 3 for the become-follower transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,309] TRACE Controller 0 epoch 3 received response LeaderAndIsrResponse(4,Map((twitter-topic,0) -> 0, (Hello-Kafka,0) -> 0),0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:21,310] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [twitter-topic,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2016-05-19 15:17:21,310] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [Hello-Kafka,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2016-05-19 15:17:21,310] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:21,311] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 3 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,311] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 3 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,312] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 3 starting the become-leader transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,312] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 3 starting the become-leader transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,313] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 3 with correlation id 5 for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,313] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 3 with correlation id 5 for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,320] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 3 for the become-leader transition for partition [Hello-Kafka,0] (state.change.logger)
[2016-05-19 15:17:21,320] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 3 for the become-leader transition for partition [twitter-topic,0] (state.change.logger)
[2016-05-19 15:17:21,321] TRACE Controller 0 epoch 3 received response LeaderAndIsrResponse(5,Map((twitter-topic,0) -> 0, (Hello-Kafka,0) -> 0),0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
[2016-05-19 15:17:21,321] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [twitter-topic,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 5 (state.change.logger)
[2016-05-19 15:17:21,322] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [Hello-Kafka,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 5 (state.change.logger)
[2016-05-19 15:17:21,322] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:localhost,port:9092 (state.change.logger)
